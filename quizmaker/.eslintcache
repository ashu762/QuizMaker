[{"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js":"1","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js":"2","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js":"3","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js":"4","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js":"5","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js":"6","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js":"7","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js":"8","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js":"9","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js":"10","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js":"11","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js":"12","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js":"13","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js":"14","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js":"15","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js":"16","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js":"17","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js":"18","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js":"19","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js":"20","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js":"21","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js":"22","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js":"23","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js":"24","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js":"25","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js":"26","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js":"27","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js":"28","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js":"29","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Result.js":"30","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Footer\\index.js":"31"},{"size":594,"mtime":1632672217133,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1632672217138,"results":"34","hashOfConfig":"33"},{"size":1000,"mtime":1632672217137,"results":"35","hashOfConfig":"33"},{"size":499,"mtime":1633156874459,"results":"36","hashOfConfig":"33"},{"size":641,"mtime":1632672217117,"results":"37","hashOfConfig":"33"},{"size":338,"mtime":1632673641119,"results":"38","hashOfConfig":"33"},{"size":2915,"mtime":1633172241221,"results":"39","hashOfConfig":"33"},{"size":407,"mtime":1632673748191,"results":"40","hashOfConfig":"33"},{"size":533,"mtime":1632672217147,"results":"41","hashOfConfig":"33"},{"size":3585,"mtime":1633147223903,"results":"42","hashOfConfig":"33"},{"size":1036,"mtime":1633140794716,"results":"43","hashOfConfig":"33"},{"size":3398,"mtime":1633146449140,"results":"44","hashOfConfig":"33"},{"size":6661,"mtime":1633170279515,"results":"45","hashOfConfig":"33"},{"size":1421,"mtime":1633147206113,"results":"46","hashOfConfig":"33"},{"size":346,"mtime":1633141405669,"results":"47","hashOfConfig":"33"},{"size":1786,"mtime":1633147126665,"results":"48","hashOfConfig":"33"},{"size":2742,"mtime":1633147240751,"results":"49","hashOfConfig":"33"},{"size":1354,"mtime":1633147266434,"results":"50","hashOfConfig":"33"},{"size":6090,"mtime":1633156407224,"results":"51","hashOfConfig":"33"},{"size":1962,"mtime":1632672217116,"results":"52","hashOfConfig":"33"},{"size":860,"mtime":1632672217148,"results":"53","hashOfConfig":"33"},{"size":140,"mtime":1632672217113,"results":"54","hashOfConfig":"33"},{"size":2857,"mtime":1632672217137,"results":"55","hashOfConfig":"33"},{"size":3887,"mtime":1633172204302,"results":"56","hashOfConfig":"33"},{"size":393,"mtime":1632672217133,"results":"57","hashOfConfig":"33"},{"size":1128,"mtime":1632672217151,"results":"58","hashOfConfig":"33"},{"size":1109,"mtime":1632672217132,"results":"59","hashOfConfig":"33"},{"size":1652,"mtime":1633170519272,"results":"60","hashOfConfig":"33"},{"size":2227,"mtime":1633161939418,"results":"61","hashOfConfig":"33"},{"size":120,"mtime":1632672217129,"results":"62","hashOfConfig":"33"},{"size":283,"mtime":1633170760011,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"b9q575",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js",[],["142","143"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js",[],["144","145"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js",[],["146","147"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js",["148"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js",["149","150"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js",["151"],"import React, { useEffect } from \"react\";\r\nimport QuestionList from \"../components/QuestionList\";\r\nimport { useSelector } from \"react-redux\";\r\nconst QuizPage = ({ match, history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <QuestionList id={match.params.id} history={history}></QuestionList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo) {\r\n      setMessage(\"User already registered\");\r\n      history.push(\"/\");\r\n    } else if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password Do not Match\");\r\n      return;\r\n    } else dispatch(register(email, password, name, confirmPassword));\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login\">REGISTER</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Sever error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Already Have an account\r\n          <a href=\"/login\" className=\"ml-3\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n",["153","154"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js",[],["155","156"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js",["157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuiz } from \"../actions/quizActions\";\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 10) {\r\n      setMessage(\"Please Enter A Description of more than 10 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description));\r\n  };\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">\r\n      Could not connect to server. Please try again later\r\n    </Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">\r\n          Create Your Quiz\r\n        </h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js",["159","160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuestion, clearQuestion } from \"../actions/quizActions\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst PostQuestions = ({ history }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState(\"\");\r\n  const [option2, setOption2] = useState(\"\");\r\n  const [option3, setOption3] = useState(\"\");\r\n  const [option4, setOption4] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [hint, setHint] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const questionCreate = useSelector((state) => state.questionCreate);\r\n  const { error, loading, questionInfo } = questionCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (questionInfo) {\r\n      setQuestion(\"\");\r\n      setOption1(\"\");\r\n      setOption2(\"\");\r\n      setOption3(\"\");\r\n      setOption4(\"\");\r\n      setHint(\"\");\r\n      setCorrectOption(0);\r\n      dispatch(clearQuestion());\r\n    }\r\n  }, [questionInfo, clearQuestion]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setMessage(\"Options cannot be empty\");\r\n      return;\r\n    }\r\n    if (correctOption < 0 || correctOption >= 4) {\r\n      setMessage(\"Please enter a option between 0 to 3!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n    dispatch(postQuestion(question, correctOption, arr, hint));\r\n  };\r\n  const quizCreated = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login add-question\">\r\n          Add Question\r\n        </h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Could not post questions. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"question\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Question</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Question\"\r\n              value={question}\r\n              className=\"question-input\"\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option1</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 1\"\r\n              value={option1}\r\n              onChange={(e) => setOption1(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option2\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option2</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 2\"\r\n              value={option2}\r\n              onChange={(e) => setOption2(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option3\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option3</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 3\"\r\n              value={option3}\r\n              onChange={(e) => setOption3(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option4</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 4\"\r\n              value={option4}\r\n              onChange={(e) => setOption4(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"correctOption\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Correct Option</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Correct Option\"\r\n              value={correctOption}\r\n              onChange={(e) => setCorrectOption(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"hint\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Hint text</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              type=\"name\"\r\n              placeholder=\"Enter Hint Text\"\r\n              value={hint}\r\n              onChange={(e) => setHint(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mybutton submit-quiz-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={quizCreated}\r\n              className=\"mybutton done-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              I am done\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostQuestions;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js",["163"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\n\r\nimport EmptyScreen from \"../components/EmptyScreen\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const quizList = useSelector((state) => state.quizList);\r\n  const { loading, error, quiz } = quizList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    dispatch(listQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <h1 className=\"quizzes-title\">Quizzes</h1>\r\n          {loading ? (\r\n            <Loaders></Loaders>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">\r\n              Server Error. Please try again later\r\n            </Message>\r\n          ) : (\r\n            <div className=\"quiz-container\">\r\n              {quiz.map((ele) => (\r\n                <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <EmptyScreen />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n",["164","165"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js",["166"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js",["167","168","169","170","171","172"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Container } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { add } from \"../actions/My\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { login } from \"../actions/userActions\";\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(password);\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">LOG IN!</h1>\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loader active inline=\"centered\" />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <a href=\"#\" className=\"d-flex justify-content-end mt-2\">\r\n          Forgot Password\r\n        </a>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Don't Have an account\r\n          <a href=\"/register\" className=\"ml-3\">\r\n            Register\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n",["173","174"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js",["175","176"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyQuizComponent from \"../components/MyQuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myListQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport \"../index.css\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst MyQuiz = () => {\r\n  const dispatch = useDispatch();\r\n  const myQuizList = useSelector((state) => state.myQuizList);\r\n  const { loading, error, myQuiz } = myQuizList;\r\n  useEffect(() => {\r\n    dispatch(myListQuiz());\r\n  }, [dispatch]);\r\n  // useEffect(() => {\r\n  //   Alert(\"State Changed\");\r\n  // }, [myQuiz]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"quizzes-title\">Quizzes</h1>\r\n        {loading ? (\r\n          <Loaders></Loaders>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        ) : (\r\n          <div className=\"quiz-container\">\r\n            {myQuiz.map((ele) => (\r\n              <MyQuizComponent\r\n                quizDetails={ele}\r\n                key={ele._id}\r\n              ></MyQuizComponent>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js",["177"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js",["178","179"],"import React, { useState } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport \"../../App.css\";\r\nimport \"./question.css\";\r\n\r\nconst Question = ({\r\n  question,\r\n  score,\r\n  setScore,\r\n  indexNum,\r\n  checked,\r\n  setChecked,\r\n  setIndex,\r\n  clicked,\r\n  setClicked,\r\n  questionLength,\r\n  history,\r\n  setHaveFinished,\r\n}) => {\r\n  const setClickhandler = (index) => {\r\n    if (clicked[indexNum]) return;\r\n    setClicked(\r\n      clicked.map((item, ind) => {\r\n        return ind == indexNum ? true : item;\r\n      })\r\n    );\r\n    if (index === question.correctOption) {\r\n      setChecked(\r\n        checked.map((item, ind) => {\r\n          return ind === indexNum ? 1 : item;\r\n        })\r\n      );\r\n      setScore(score + 1);\r\n    } else {\r\n      setChecked(\r\n        checked.map((item, index) => {\r\n          return index === indexNum ? 2 : item;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function setFinished() {\r\n    setHaveFinished(true);\r\n  }\r\n\r\n  const Modal = () => (\r\n    <Popup\r\n      trigger={<div className=\"prev link result-button\">End quiz</div>}\r\n      modal\r\n    >\r\n      {(close) => (\r\n        <div className=\"asdas\">\r\n          <h2 style={{ textAlign: \"center\", marginTop: \"20px\" }}>End Quiz</h2>\r\n          <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n            Are you sure want to complete the Quiz ?\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              marginTop: \"20px\",\r\n              padding: \"5px 40px\",\r\n            }}\r\n          >\r\n            <div\r\n              onClick={setFinished}\r\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n            >\r\n              YES\r\n            </div>\r\n            <div\r\n              onClick={close}\r\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n            >\r\n              NO\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-title\">{question.question}</div>\r\n      <div>\r\n        {question.options.map((option, index) => {\r\n          return (\r\n            <button\r\n              onClick={() => setClickhandler(index)}\r\n              className={\r\n                clicked[indexNum] && question.correctOption === index\r\n                  ? \"green option\"\r\n                  : clicked[indexNum]\r\n                  ? \"red option\"\r\n                  : \"option\"\r\n              }\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n        {question?.hint?.length > 0 && (\r\n          <div className=\"accordion-content\">\r\n            <Accordion defaultActiveKey=\"0\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>\r\n                  <div className=\"accordion-title\">\r\n                    Show Hint <ChevronDoubleDown size={15} color=\"green\" />\r\n                  </div>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"accordion-hint\">\r\n                  {question.hint}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </div>\r\n        )}\r\n\r\n        <div class=\"buttons\">\r\n          {indexNum === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div onClick={() => setIndex(indexNum - 1)} className=\"prev\">\r\n              prev\r\n            </div>\r\n          )}\r\n          {indexNum === questionLength - 1 ? (\r\n            <Modal />\r\n          ) : (\r\n            <div onClick={() => setIndex(indexNum + 1)} className=\"prev\">\r\n              next\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js",["180"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js",["181","182","183","184","185"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      {userInfo ? (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                {/* <Nav.Link href=\"/profile\">Profile</Nav.Link> */}\r\n                <Nav.Link href=\"/create\">Create</Nav.Link>\r\n                <Nav.Link href=\"/myquiz\">My Quizzes</Nav.Link>\r\n                <Nav.Link onClick={logoutHandler}>Logout</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                <Nav.Link href=\"/register\">Register</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Result.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Footer\\index.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"188","replacedBy":"191"},{"ruleId":"186","replacedBy":"192"},{"ruleId":"188","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":26,"nodeType":"196","messageId":"197","endLine":3,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":28,"column":6,"nodeType":"200","endLine":28,"endColumn":16,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"202","line":31,"column":6,"nodeType":"200","endLine":31,"endColumn":8,"suggestions":"203"},{"ruleId":"198","severity":1,"message":"199","line":11,"column":6,"nodeType":"200","endLine":11,"endColumn":16,"suggestions":"204"},{"ruleId":"198","severity":1,"message":"205","line":26,"column":6,"nodeType":"200","endLine":26,"endColumn":16,"suggestions":"206"},{"ruleId":"186","replacedBy":"207"},{"ruleId":"188","replacedBy":"208"},{"ruleId":"186","replacedBy":"209"},{"ruleId":"188","replacedBy":"210"},{"ruleId":"198","severity":1,"message":"199","line":23,"column":6,"nodeType":"200","endLine":23,"endColumn":16,"suggestions":"211"},{"ruleId":"198","severity":1,"message":"199","line":26,"column":6,"nodeType":"200","endLine":26,"endColumn":16,"suggestions":"212"},{"ruleId":"194","severity":1,"message":"213","line":14,"column":10,"nodeType":"196","messageId":"197","endLine":14,"endColumn":17},{"ruleId":"194","severity":1,"message":"214","line":14,"column":19,"nodeType":"196","messageId":"197","endLine":14,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":31,"column":6,"nodeType":"200","endLine":31,"endColumn":16,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"216","line":43,"column":6,"nodeType":"200","endLine":43,"endColumn":35,"suggestions":"217"},{"ruleId":"194","severity":1,"message":"218","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"186","replacedBy":"219"},{"ruleId":"188","replacedBy":"220"},{"ruleId":"198","severity":1,"message":"221","line":30,"column":6,"nodeType":"200","endLine":30,"endColumn":15,"suggestions":"222"},{"ruleId":"194","severity":1,"message":"223","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"224","line":2,"column":16,"nodeType":"196","messageId":"197","endLine":2,"endColumn":21},{"ruleId":"194","severity":1,"message":"225","line":2,"column":23,"nodeType":"196","messageId":"197","endLine":2,"endColumn":32},{"ruleId":"194","severity":1,"message":"226","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":13},{"ruleId":"194","severity":1,"message":"227","line":11,"column":8,"nodeType":"196","messageId":"197","endLine":11,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":67,"column":9,"nodeType":"230","endLine":67,"endColumn":65},{"ruleId":"186","replacedBy":"231"},{"ruleId":"188","replacedBy":"232"},{"ruleId":"194","severity":1,"message":"218","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"224","line":9,"column":10,"nodeType":"196","messageId":"197","endLine":9,"endColumn":15},{"ruleId":"194","severity":1,"message":"233","line":18,"column":3,"nodeType":"196","messageId":"197","endLine":18,"endColumn":19},{"ruleId":"194","severity":1,"message":"234","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":27,"column":20,"nodeType":"237","messageId":"238","endLine":27,"endColumn":22},{"ruleId":"194","severity":1,"message":"239","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":19},{"ruleId":"194","severity":1,"message":"240","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"241","line":4,"column":3,"nodeType":"196","messageId":"197","endLine":4,"endColumn":9},{"ruleId":"194","severity":1,"message":"242","line":6,"column":3,"nodeType":"196","messageId":"197","endLine":6,"endColumn":14},{"ruleId":"194","severity":1,"message":"243","line":7,"column":3,"nodeType":"196","messageId":"197","endLine":7,"endColumn":7},{"ruleId":"194","severity":1,"message":"244","line":8,"column":3,"nodeType":"196","messageId":"197","endLine":8,"endColumn":14},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],["245"],["246"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["247"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["248"],["249"],"React Hook useEffect has missing dependencies: 'history' and 'userLogin.userInfo'. Either include them or remove the dependency array.",["250"],["245"],["246"],["245"],["246"],["251"],["252"],"'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["253"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'clearQuestion' aren't valid dependencies because mutating them doesn't re-render the component.",["254"],"'Link' is defined but never used.",["245"],["246"],"React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["255"],"'Card' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'add' is defined but never used.","'Loaders' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["245"],["246"],"'QUIZ_DELETE_FAIL' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WelcomePage' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"256","fix":"260"},{"desc":"261","fix":"262"},{"desc":"256","fix":"263"},{"desc":"264","fix":"265"},{"desc":"256","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [history, userInfo]",{"range":"271","text":"272"},"Update the dependencies array to be: [dispatch, id]",{"range":"273","text":"274"},{"range":"275","text":"272"},"Update the dependencies array to be: [history, userInfo, userLogin.userInfo]",{"range":"276","text":"277"},{"range":"278","text":"272"},"Update the dependencies array to be: [history, quizInfo]",{"range":"279","text":"280"},{"range":"281","text":"272"},"Update the dependencies array to be: [questionInfo, dispatch]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch, success]",{"range":"284","text":"285"},[1084,1094],"[history, userInfo]",[1158,1160],"[dispatch, id]",[370,380],[1054,1064],"[history, userInfo, userLogin.userInfo]",[944,954],[1043,1053],"[history, quizInfo]",[1232,1242],[1502,1531],"[questionInfo, dispatch]",[992,1001],"[dispatch, success]"]