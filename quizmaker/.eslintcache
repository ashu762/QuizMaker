[{"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js":"1","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js":"2","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js":"3","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js":"4","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js":"5","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js":"6","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js":"7","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js":"8","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js":"9","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js":"10","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js":"11","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js":"12","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js":"13","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js":"14","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js":"15","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question.js":"16","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js":"17","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js":"18","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js":"19","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js":"20"},{"size":594,"mtime":1632672217133,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1632672217138,"results":"23","hashOfConfig":"22"},{"size":1000,"mtime":1632672217137,"results":"24","hashOfConfig":"22"},{"size":522,"mtime":1632674920684,"results":"25","hashOfConfig":"22"},{"size":641,"mtime":1632672217117,"results":"26","hashOfConfig":"22"},{"size":338,"mtime":1632673641119,"results":"27","hashOfConfig":"22"},{"size":2862,"mtime":1633154870815,"results":"28","hashOfConfig":"22"},{"size":407,"mtime":1632673748191,"results":"29","hashOfConfig":"22"},{"size":533,"mtime":1632672217147,"results":"30","hashOfConfig":"22"},{"size":3585,"mtime":1633147223903,"results":"31","hashOfConfig":"22"},{"size":1036,"mtime":1633140794716,"results":"32","hashOfConfig":"22"},{"size":3398,"mtime":1633146449140,"results":"33","hashOfConfig":"22"},{"size":5091,"mtime":1633147164611,"results":"34","hashOfConfig":"22"},{"size":1421,"mtime":1633147206113,"results":"35","hashOfConfig":"22"},{"size":346,"mtime":1633141405669,"results":"36","hashOfConfig":"22"},{"size":3121,"mtime":1633153518907,"results":"37","hashOfConfig":"22"},{"size":1786,"mtime":1633147126665,"results":"38","hashOfConfig":"22"},{"size":2742,"mtime":1633147240751,"results":"39","hashOfConfig":"22"},{"size":1354,"mtime":1633147266434,"results":"40","hashOfConfig":"22"},{"size":5925,"mtime":1632672217113,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"b9q575",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js",[],["92","93"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js",[],["94","95"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js",[],["96","97"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js",["98"],"import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\nimport \"../index.css\";\r\nconst Loaders = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Segment>\r\n        <Dimmer active inverted>\r\n          <Loader size=\"large\" className=\"margin-top\"></Loader>\r\n        </Dimmer>\r\n\r\n        <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n      </Segment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loaders;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js",["99","100"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js",["101"],"import React, { useEffect } from \"react\";\r\nimport QuestionList from \"../components/QuestionList\";\r\nimport { useSelector } from \"react-redux\";\r\nconst QuizPage = ({ match, history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <QuestionList id={match.params.id} history={history}></QuestionList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js",["102"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo) {\r\n      setMessage(\"User already registered\");\r\n      history.push(\"/\");\r\n    } else if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password Do not Match\");\r\n      return;\r\n    } else dispatch(register(email, password, name, confirmPassword));\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login\">REGISTER</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Sever error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Already Have an account\r\n          <a href=\"/login\" className=\"ml-3\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n",["103","104"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js",["105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuiz } from \"../actions/quizActions\";\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 10) {\r\n      setMessage(\"Please Enter A Description of more than 10 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description));\r\n  };\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">\r\n      Could not connect to server. Please try again later\r\n    </Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">\r\n          Create Your Quiz\r\n        </h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js",["107","108","109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuestion, clearQuestion } from \"../actions/quizActions\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst PostQuestions = ({ history }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState(\"\");\r\n  const [option2, setOption2] = useState(\"\");\r\n  const [option3, setOption3] = useState(\"\");\r\n  const [option4, setOption4] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const questionCreate = useSelector((state) => state.questionCreate);\r\n  const { error, loading, questionInfo } = questionCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (questionInfo) {\r\n      setQuestion(\"\");\r\n      setOption1(\"\");\r\n      setOption2(\"\");\r\n      setOption3(\"\");\r\n      setOption4(\"\");\r\n      setCorrectOption(0);\r\n      dispatch(clearQuestion());\r\n    }\r\n  }, [questionInfo, clearQuestion]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setMessage(\"Options do not match!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n    dispatch(postQuestion(question, correctOption, arr));\r\n  };\r\n  const quizCreated = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">Add Question</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Could not post questions. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"question\">\r\n            <Form.Label>Question</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Question\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option1</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 1\"\r\n              value={option1}\r\n              onChange={(e) => setOption1(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option2\">\r\n            <Form.Label>Option2</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 2\"\r\n              value={option2}\r\n              onChange={(e) => setOption2(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option3\">\r\n            <Form.Label>Option3</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 3\"\r\n              value={option3}\r\n              onChange={(e) => setOption3(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option4</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 4\"\r\n              value={option4}\r\n              onChange={(e) => setOption4(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"correctOption\">\r\n            <Form.Label>Correct Option</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Correct Option\"\r\n              value={correctOption}\r\n              onChange={(e) => setCorrectOption(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mybutton submit-quiz-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={quizCreated}\r\n              className=\"mybutton done-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              I am done\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostQuestions;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js",["111"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\n\r\nimport EmptyScreen from \"../components/EmptyScreen\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const quizList = useSelector((state) => state.quizList);\r\n  const { loading, error, quiz } = quizList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    dispatch(listQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <h1 className=\"quizzes-title\">Quizzes</h1>\r\n          {loading ? (\r\n            <Loaders></Loaders>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">\r\n              Server Error. Please try again later\r\n            </Message>\r\n          ) : (\r\n            <div className=\"quiz-container\">\r\n              {quiz.map((ele) => (\r\n                <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <EmptyScreen />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question.js",["112","113"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js",["114"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js",["115","116","117","118","119","120"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js",["121","122"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":28,"column":6,"nodeType":"137","endLine":28,"endColumn":16,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":32,"column":6,"nodeType":"137","endLine":32,"endColumn":8,"suggestions":"140"},{"ruleId":"135","severity":1,"message":"136","line":11,"column":6,"nodeType":"137","endLine":11,"endColumn":16,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"142","line":26,"column":6,"nodeType":"137","endLine":26,"endColumn":16,"suggestions":"143"},{"ruleId":"123","replacedBy":"144"},{"ruleId":"125","replacedBy":"145"},{"ruleId":"135","severity":1,"message":"136","line":23,"column":6,"nodeType":"137","endLine":23,"endColumn":16,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"136","line":26,"column":6,"nodeType":"137","endLine":26,"endColumn":16,"suggestions":"147"},{"ruleId":"131","severity":1,"message":"148","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":17},{"ruleId":"131","severity":1,"message":"149","line":14,"column":19,"nodeType":"133","messageId":"134","endLine":14,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":30,"column":6,"nodeType":"137","endLine":30,"endColumn":16,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"151","line":41,"column":6,"nodeType":"137","endLine":41,"endColumn":35,"suggestions":"152"},{"ruleId":"131","severity":1,"message":"153","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"154","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":24,"column":20,"nodeType":"157","messageId":"158","endLine":24,"endColumn":22},{"ruleId":"135","severity":1,"message":"159","line":30,"column":6,"nodeType":"137","endLine":30,"endColumn":15,"suggestions":"160"},{"ruleId":"131","severity":1,"message":"161","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"162","line":2,"column":16,"nodeType":"133","messageId":"134","endLine":2,"endColumn":21},{"ruleId":"131","severity":1,"message":"163","line":2,"column":23,"nodeType":"133","messageId":"134","endLine":2,"endColumn":32},{"ruleId":"131","severity":1,"message":"164","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"165","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":67,"column":9,"nodeType":"168","endLine":67,"endColumn":65},{"ruleId":"131","severity":1,"message":"153","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"162","line":9,"column":10,"nodeType":"133","messageId":"134","endLine":9,"endColumn":15},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],["169"],["170"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["172"],["173"],"React Hook useEffect has missing dependencies: 'history' and 'userLogin.userInfo'. Either include them or remove the dependency array.",["174"],["169"],["170"],["175"],["176"],"'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["177"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'clearQuestion' aren't valid dependencies because mutating them doesn't re-render the component.",["178"],"'Link' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["179"],"'Card' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'add' is defined but never used.","'Loaders' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"180","fix":"184"},{"desc":"185","fix":"186"},{"desc":"180","fix":"187"},{"desc":"188","fix":"189"},{"desc":"180","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [history, userInfo]",{"range":"195","text":"196"},"Update the dependencies array to be: [dispatch, id]",{"range":"197","text":"198"},{"range":"199","text":"196"},"Update the dependencies array to be: [history, userInfo, userLogin.userInfo]",{"range":"200","text":"201"},{"range":"202","text":"196"},"Update the dependencies array to be: [history, quizInfo]",{"range":"203","text":"204"},{"range":"205","text":"196"},"Update the dependencies array to be: [questionInfo, dispatch]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, success]",{"range":"208","text":"209"},[1084,1094],"[history, userInfo]",[1180,1182],"[dispatch, id]",[370,380],[1054,1064],"[history, userInfo, userLogin.userInfo]",[944,954],[1043,1053],"[history, quizInfo]",[1191,1201],[1441,1470],"[questionInfo, dispatch]",[992,1001],"[dispatch, success]"]