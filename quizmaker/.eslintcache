[{"D:\\dump\\QuizMaker Created\\quizmaker\\src\\index.js":"1","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\LoginPage.js":"2","D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\My.js":"3","D:\\dump\\QuizMaker Created\\quizmaker\\src\\constants\\userConstants.js":"4","D:\\dump\\QuizMaker Created\\quizmaker\\src\\store.js":"5","D:\\dump\\QuizMaker Created\\quizmaker\\src\\reducers\\userReducers.js":"6","D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\userActions.js":"7","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\HomeScreen.js":"8","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Header.js":"9","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\RegisterPage.js":"10","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\WelcomePage.js":"11","D:\\dump\\QuizMaker Created\\quizmaker\\src\\App.js":"12","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\QuizComponent.js":"13","D:\\dump\\QuizMaker Created\\quizmaker\\src\\reportWebVitals.js":"14","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\CreateQuiz.js":"15","D:\\dump\\QuizMaker Created\\quizmaker\\src\\constants\\quizConstants.js":"16","D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\quizActions.js":"17","D:\\dump\\QuizMaker Created\\quizmaker\\src\\reducers\\quizReducers.js":"18","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Check.js":"19","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\QuestionList.js":"20","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Question.js":"21","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\CheckList.js":"22","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\QuizPage.js":"23","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\PostQuestions.js":"24","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\FormContainer.js":"25","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\MyQuiz.js":"26","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Loaders.js":"27","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Message.js":"28","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\NotFound.js":"29"},{"size":575,"mtime":1610592952377,"results":"30","hashOfConfig":"31"},{"size":2655,"mtime":1610769805855,"results":"32","hashOfConfig":"31"},{"size":140,"mtime":1607844911626,"results":"33","hashOfConfig":"31"},{"size":393,"mtime":1610594870512,"results":"34","hashOfConfig":"31"},{"size":1072,"mtime":1610766561824,"results":"35","hashOfConfig":"31"},{"size":1000,"mtime":1610679191619,"results":"36","hashOfConfig":"31"},{"size":1962,"mtime":1610679164723,"results":"37","hashOfConfig":"31"},{"size":1309,"mtime":1610768023243,"results":"38","hashOfConfig":"31"},{"size":2048,"mtime":1610679330152,"results":"39","hashOfConfig":"31"},{"size":3501,"mtime":1610768084872,"results":"40","hashOfConfig":"31"},{"size":860,"mtime":1610518348561,"results":"41","hashOfConfig":"31"},{"size":1336,"mtime":1610942543518,"results":"42","hashOfConfig":"31"},{"size":978,"mtime":1610939368140,"results":"43","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"31"},{"size":3358,"mtime":1610941704243,"results":"45","hashOfConfig":"31"},{"size":936,"mtime":1610766383066,"results":"46","hashOfConfig":"31"},{"size":4933,"mtime":1610938292691,"results":"47","hashOfConfig":"31"},{"size":2427,"mtime":1610766579676,"results":"48","hashOfConfig":"31"},{"size":641,"mtime":1611894456634,"results":"49","hashOfConfig":"31"},{"size":2303,"mtime":1611891743308,"results":"50","hashOfConfig":"31"},{"size":2121,"mtime":1611894601970,"results":"51","hashOfConfig":"31"},{"size":300,"mtime":1610548377511,"results":"52","hashOfConfig":"31"},{"size":533,"mtime":1610936989888,"results":"53","hashOfConfig":"31"},{"size":4959,"mtime":1610888901909,"results":"54","hashOfConfig":"31"},{"size":350,"mtime":1607780313667,"results":"55","hashOfConfig":"31"},{"size":1123,"mtime":1610767987140,"results":"56","hashOfConfig":"31"},{"size":506,"mtime":1610768178081,"results":"57","hashOfConfig":"31"},{"size":254,"mtime":1610463170759,"results":"58","hashOfConfig":"31"},{"size":127,"mtime":1610942538591,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"14x9eow",{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\dump\\QuizMaker Created\\quizmaker\\src\\index.js",[],["132","133"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\LoginPage.js",["134","135","136","137","138","139","140"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Container } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { add } from \"../actions/My\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { login } from \"../actions/userActions\";\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(password);\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">LOG IN!</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader active inline=\"centered\" />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <a href=\"#\" className=\"d-flex justify-content-end mt-2\">\r\n          Forgot Password\r\n        </a>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Don't Have an account\r\n          <a href=\"#\" className=\"ml-3\">\r\n            Register\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n",["141","142"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\My.js",[],["143","144"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\constants\\userConstants.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\store.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\reducers\\userReducers.js",[],["145","146"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\userActions.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\HomeScreen.js",["147"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport \"../index.css\";\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const quizList = useSelector((state) => state.quizList);\r\n  const { loading, error, quiz } = quizList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    dispatch(listQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <h1 className=\"quizzes-title\">Quizzes</h1>\r\n          {loading ? (\r\n            <Loaders></Loaders>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : (\r\n            <div className=\"quiz-container\">\r\n              {quiz.map((ele) => (\r\n                <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>Hello World</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Header.js",["148","149","150","151","152"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n                <Nav.Link onClick={logoutHandler}>Logout</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                <Nav.Link href=\"/register\">Register</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\RegisterPage.js",["153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo) {\r\n      setMessage(\"User already registered\");\r\n      history.push(\"/\");\r\n    } else if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Password Do not Match\");\r\n      return;\r\n    } else dispatch(register(email, password, name, confirmPassword));\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login\">REGISTER</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Already Have an account\r\n          <a href=\"#\" className=\"ml-3\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n",["156","157"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\WelcomePage.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\App.js",["158"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\QuizComponent.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\reportWebVitals.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\CreateQuiz.js",["159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuiz } from \"../actions/quizActions\";\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 30) {\r\n      setMessage(\"Please Enter A Description of more than 30 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description));\r\n  };\r\n  console.log(quizInfo);\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">Create Quiz</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n      hello world\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\constants\\quizConstants.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\actions\\quizActions.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\reducers\\quizReducers.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Check.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\QuestionList.js",["161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport CheckList from \"./CheckList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../App.css\";\r\nimport Question from \"./Question\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"./Loaders\";\r\nimport { listQuestions } from \"../actions/quizActions\";\r\nconst QuestionList = ({ id, history }) => {\r\n  const [score, setScore] = useState(0);\r\n  const [checked, setChecked] = useState([]);\r\n  const [questionLength, setQuestionLength] = useState(-1);\r\n  const [index, setIndex] = useState(0);\r\n  const questionList = useSelector((state) => state.questionList);\r\n  const { loading, error, questions } = questionList;\r\n  const [clicked, setClicked] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    console.log(id);\r\n    dispatch(listQuestions(id));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (questions) {\r\n      setQuestionLength(questions.length);\r\n      setChecked(new Array(questions.length).fill(0));\r\n      setClicked(new Array(questions.length).fill(0));\r\n    }\r\n  }, [questions]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loaders></Loaders>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : questionLength > 0 ? (\r\n        <div className=\"quizList\">\r\n          <div className=\"quiz-content\">\r\n            <Question\r\n              question={questions[index]}\r\n              score={score}\r\n              setScore={setScore}\r\n              indexNum={index}\r\n              setIndex={setIndex}\r\n              checked={checked}\r\n              setChecked={setChecked}\r\n              clicked={clicked}\r\n              setClicked={setClicked}\r\n              questionLength={questionLength}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"line\"></div>\r\n          <div className=\"quiz-details\">\r\n            <div>{score}</div>\r\n            <CheckList checked={checked} setIndex={setIndex} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>No questions</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Question.js",["163","164"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\CheckList.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\QuizPage.js",["165"],"import React, { useEffect } from \"react\";\r\nimport QuestionList from \"../components/QuestionList\";\r\nimport { useSelector } from \"react-redux\";\r\nconst QuizPage = ({ match, history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <QuestionList id={match.params.id} history={history}></QuestionList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\PostQuestions.js",["166","167","168","169"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuestion, clearQuestion } from \"../actions/quizActions\";\r\nconst PostQuestions = ({ history }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState(\"\");\r\n  const [option2, setOption2] = useState(\"\");\r\n  const [option3, setOption3] = useState(\"\");\r\n  const [option4, setOption4] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const questionCreate = useSelector((state) => state.questionCreate);\r\n  const { error, loading, questionInfo } = questionCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (questionInfo) {\r\n      console.log(\"Question Submitted\");\r\n      setQuestion(\"\");\r\n      setOption1(\"\");\r\n      setOption2(\"\");\r\n      setOption3(\"\");\r\n      setOption4(\"\");\r\n      setCorrectOption(0);\r\n      dispatch(clearQuestion());\r\n    } else console.log(\"Question Cleared!!\");\r\n  }, [questionInfo, clearQuestion]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setMessage(\"Options do not match!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n    dispatch(postQuestion(question, correctOption, arr));\r\n  };\r\n  const quizCreated = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">Add Question</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"question\">\r\n            <Form.Label>Question</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Question\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option1</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 1\"\r\n              value={option1}\r\n              onChange={(e) => setOption1(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option2\">\r\n            <Form.Label>Option2</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 2\"\r\n              value={option2}\r\n              onChange={(e) => setOption2(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option3\">\r\n            <Form.Label>Option3</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 3\"\r\n              value={option3}\r\n              onChange={(e) => setOption3(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option4</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 4\"\r\n              value={option4}\r\n              onChange={(e) => setOption4(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"correctOption\">\r\n            <Form.Label>Correct Option</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Correct Option\"\r\n              value={correctOption}\r\n              onChange={(e) => setCorrectOption(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={quizCreated}\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            I am done\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n      hello world\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostQuestions;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\FormContainer.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\MyQuiz.js",["170"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myListQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport \"../index.css\";\r\nconst MyQuiz = () => {\r\n  const dispatch = useDispatch();\r\n  const myQuizList = useSelector((state) => state.myQuizList);\r\n  const { loading, error, myQuiz } = myQuizList;\r\n  useEffect(() => {\r\n    dispatch(myListQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"quizzes-title\">Quizzes</h1>\r\n        {loading ? (\r\n          <Loaders></Loaders>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <div className=\"quiz-container\">\r\n            {myQuiz.map((ele) => (\r\n              <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQuiz;\r\n","D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Loaders.js",["171"],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\components\\Message.js",[],"D:\\dump\\QuizMaker Created\\quizmaker\\src\\screens\\NotFound.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"180","line":2,"column":16,"nodeType":"178","messageId":"179","endLine":2,"endColumn":21},{"ruleId":"176","severity":1,"message":"181","line":2,"column":23,"nodeType":"178","messageId":"179","endLine":2,"endColumn":32},{"ruleId":"176","severity":1,"message":"182","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":13},{"ruleId":"176","severity":1,"message":"183","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":63,"column":9,"nodeType":"186","endLine":63,"endColumn":65},{"ruleId":"184","severity":1,"message":"185","line":68,"column":11,"nodeType":"186","endLine":68,"endColumn":40},{"ruleId":"172","replacedBy":"187"},{"ruleId":"174","replacedBy":"188"},{"ruleId":"172","replacedBy":"189"},{"ruleId":"174","replacedBy":"190"},{"ruleId":"172","replacedBy":"191"},{"ruleId":"174","replacedBy":"192"},{"ruleId":"176","severity":1,"message":"193","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"194","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"195","line":4,"column":3,"nodeType":"178","messageId":"179","endLine":4,"endColumn":9},{"ruleId":"176","severity":1,"message":"196","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"197","line":7,"column":3,"nodeType":"178","messageId":"179","endLine":7,"endColumn":7},{"ruleId":"176","severity":1,"message":"198","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":26,"column":6,"nodeType":"201","endLine":26,"endColumn":16,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":29,"column":18,"nodeType":"205","messageId":"206","endLine":29,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":89,"column":11,"nodeType":"186","endLine":89,"endColumn":40},{"ruleId":"172","replacedBy":"207"},{"ruleId":"174","replacedBy":"208"},{"ruleId":"176","severity":1,"message":"209","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":19},{"ruleId":"199","severity":1,"message":"210","line":23,"column":6,"nodeType":"201","endLine":23,"endColumn":16,"suggestions":"211"},{"ruleId":"199","severity":1,"message":"210","line":26,"column":6,"nodeType":"201","endLine":26,"endColumn":16,"suggestions":"212"},{"ruleId":"199","severity":1,"message":"210","line":24,"column":6,"nodeType":"201","endLine":24,"endColumn":16,"suggestions":"213"},{"ruleId":"199","severity":1,"message":"214","line":28,"column":6,"nodeType":"201","endLine":28,"endColumn":8,"suggestions":"215"},{"ruleId":"176","severity":1,"message":"216","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"217","line":21,"column":20,"nodeType":"205","messageId":"206","endLine":21,"endColumn":22},{"ruleId":"199","severity":1,"message":"210","line":11,"column":6,"nodeType":"201","endLine":11,"endColumn":16,"suggestions":"218"},{"ruleId":"176","severity":1,"message":"219","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":17},{"ruleId":"176","severity":1,"message":"220","line":11,"column":19,"nodeType":"178","messageId":"179","endLine":11,"endColumn":29},{"ruleId":"199","severity":1,"message":"210","line":27,"column":6,"nodeType":"201","endLine":27,"endColumn":16,"suggestions":"221"},{"ruleId":"199","severity":1,"message":"222","line":39,"column":6,"nodeType":"201","endLine":39,"endColumn":35,"suggestions":"223"},{"ruleId":"176","severity":1,"message":"193","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"224","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Container' is defined but never used.","'add' is defined but never used.","'Loaders' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["225"],["226"],["225"],["226"],["225"],["226"],"'Link' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userLogin.userInfo'. Either include them or remove the dependency array.","ArrayExpression",["227"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["225"],["226"],"'WelcomePage' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["228"],["229"],["230"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["231"],"'useState' is defined but never used.","Expected '===' and instead saw '=='.",["232"],"'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["233"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'clearQuestion' aren't valid dependencies because mutating them doesn't re-render the component.",["234"],"'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"242","fix":"243"},{"desc":"237","fix":"244"},{"desc":"237","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [history, userInfo, userLogin.userInfo]",{"range":"248","text":"249"},"Update the dependencies array to be: [history, userInfo]",{"range":"250","text":"251"},"Update the dependencies array to be: [history, quizInfo]",{"range":"252","text":"253"},{"range":"254","text":"251"},"Update the dependencies array to be: [dispatch, id]",{"range":"255","text":"256"},{"range":"257","text":"251"},{"range":"258","text":"251"},"Update the dependencies array to be: [questionInfo, dispatch]",{"range":"259","text":"260"},[1054,1064],"[history, userInfo, userLogin.userInfo]",[944,954],"[history, userInfo]",[1043,1053],"[history, quizInfo]",[968,978],[1064,1066],"[dispatch, id]",[370,380],[1163,1173],[1495,1524],"[questionInfo, dispatch]"]