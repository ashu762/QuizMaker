[{"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js":"1","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js":"2","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js":"3","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js":"4","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js":"5","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js":"6","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js":"7","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js":"8","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js":"9","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js":"10","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js":"11","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js":"12","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js":"13","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js":"14","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js":"15","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js":"16","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js":"17","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js":"18","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js":"19","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js":"20","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js":"21","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js":"22","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js":"23","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js":"24","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js":"25","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js":"26","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js":"27","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js":"28","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js":"29"},{"size":594,"mtime":1632672217133,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1632672217138,"results":"32","hashOfConfig":"31"},{"size":1000,"mtime":1632672217137,"results":"33","hashOfConfig":"31"},{"size":499,"mtime":1633156874459,"results":"34","hashOfConfig":"31"},{"size":641,"mtime":1632672217117,"results":"35","hashOfConfig":"31"},{"size":338,"mtime":1632673641119,"results":"36","hashOfConfig":"31"},{"size":2840,"mtime":1633158121767,"results":"37","hashOfConfig":"31"},{"size":407,"mtime":1632673748191,"results":"38","hashOfConfig":"31"},{"size":533,"mtime":1632672217147,"results":"39","hashOfConfig":"31"},{"size":3585,"mtime":1633147223903,"results":"40","hashOfConfig":"31"},{"size":1036,"mtime":1633140794716,"results":"41","hashOfConfig":"31"},{"size":3398,"mtime":1633146449140,"results":"42","hashOfConfig":"31"},{"size":5636,"mtime":1633156389128,"results":"43","hashOfConfig":"31"},{"size":1421,"mtime":1633147206113,"results":"44","hashOfConfig":"31"},{"size":346,"mtime":1633141405669,"results":"45","hashOfConfig":"31"},{"size":1786,"mtime":1633147126665,"results":"46","hashOfConfig":"31"},{"size":2742,"mtime":1633147240751,"results":"47","hashOfConfig":"31"},{"size":1354,"mtime":1633147266434,"results":"48","hashOfConfig":"31"},{"size":6090,"mtime":1633156407224,"results":"49","hashOfConfig":"31"},{"size":1962,"mtime":1632672217116,"results":"50","hashOfConfig":"31"},{"size":860,"mtime":1632672217148,"results":"51","hashOfConfig":"31"},{"size":140,"mtime":1632672217113,"results":"52","hashOfConfig":"31"},{"size":2857,"mtime":1632672217137,"results":"53","hashOfConfig":"31"},{"size":3887,"mtime":1633162121199,"results":"54","hashOfConfig":"31"},{"size":393,"mtime":1632672217133,"results":"55","hashOfConfig":"31"},{"size":1128,"mtime":1632672217151,"results":"56","hashOfConfig":"31"},{"size":1109,"mtime":1632672217132,"results":"57","hashOfConfig":"31"},{"size":1591,"mtime":1633161890161,"results":"58","hashOfConfig":"31"},{"size":2227,"mtime":1633161939418,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"b9q575",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js",[],["133","134"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js",[],["135","136"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js",[],["137","138"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js",["139"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js",["140","141"],"import React, { useState, useEffect } from \"react\";\r\nimport CheckList from \"./CheckList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../App.css\";\r\nimport Question from \"./Question\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"./Loaders\";\r\nimport NoQuestion from \"../components/NoQuestion\";\r\n\r\nimport { listQuestions } from \"../actions/quizActions\";\r\nconst QuestionList = ({ id, history }) => {\r\n  const [score, setScore] = useState(0);\r\n  const [checked, setChecked] = useState([]);\r\n  const [questionLength, setQuestionLength] = useState(-1);\r\n  const [index, setIndex] = useState(0);\r\n  const questionList = useSelector((state) => state.questionList);\r\n  const { loading, error, questions } = questionList;\r\n  const [clicked, setClicked] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [haveFinished, setHaveFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    dispatch(listQuestions(id));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (questions) {\r\n      setQuestionLength(questions.length);\r\n      setChecked(new Array(questions.length).fill(0));\r\n      setClicked(new Array(questions.length).fill(0));\r\n    }\r\n  }, [questions]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loaders></Loaders>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">Please try again later</Message>\r\n      ) : haveFinished ? (\r\n        <div className=\"score\">\r\n          <div className=\"scorecard\">{`You have scored ${score} points out of ${questions.length}`}</div>\r\n          <a href=\"/\" className=\"link2Home\">\r\n            Play Another Quiz\r\n          </a>\r\n        </div>\r\n      ) : questionLength > 0 ? (\r\n        <div className=\"quizList\">\r\n          <div className=\"quiz-content\">\r\n            <Question\r\n              question={questions[index]}\r\n              score={score}\r\n              setScore={setScore}\r\n              indexNum={index}\r\n              setIndex={setIndex}\r\n              checked={checked}\r\n              setChecked={setChecked}\r\n              clicked={clicked}\r\n              setClicked={setClicked}\r\n              questionLength={questionLength}\r\n              history={history}\r\n              setHaveFinished={setHaveFinished}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"quiz-details\">\r\n            <div className=\"quizScore\">Total Score: {score}</div>\r\n            <div style={{ height: \"calc(100vh - 120px)\" }}>\r\n              <CheckList checked={checked} setIndex={setIndex} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NoQuestion />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n",["142","143"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js",["144"],"import React, { useEffect } from \"react\";\r\nimport QuestionList from \"../components/QuestionList\";\r\nimport { useSelector } from \"react-redux\";\r\nconst QuizPage = ({ match, history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <QuestionList id={match.params.id} history={history}></QuestionList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n",["145","146"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo) {\r\n      setMessage(\"User already registered\");\r\n      history.push(\"/\");\r\n    } else if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password Do not Match\");\r\n      return;\r\n    } else dispatch(register(email, password, name, confirmPassword));\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login\">REGISTER</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Sever error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Already Have an account\r\n          <a href=\"/login\" className=\"ml-3\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js",["148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuiz } from \"../actions/quizActions\";\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 10) {\r\n      setMessage(\"Please Enter A Description of more than 10 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description));\r\n  };\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">\r\n      Could not connect to server. Please try again later\r\n    </Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">\r\n          Create Your Quiz\r\n        </h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n",["150","151"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js",["152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuestion, clearQuestion } from \"../actions/quizActions\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst PostQuestions = ({ history }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState(\"\");\r\n  const [option2, setOption2] = useState(\"\");\r\n  const [option3, setOption3] = useState(\"\");\r\n  const [option4, setOption4] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [hint, setHint] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const questionCreate = useSelector((state) => state.questionCreate);\r\n  const { error, loading, questionInfo } = questionCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (questionInfo) {\r\n      setQuestion(\"\");\r\n      setOption1(\"\");\r\n      setOption2(\"\");\r\n      setOption3(\"\");\r\n      setOption4(\"\");\r\n      setHint(\"\");\r\n      setCorrectOption(0);\r\n      dispatch(clearQuestion());\r\n    }\r\n  }, [questionInfo, clearQuestion]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setMessage(\"Options cannot be empty\");\r\n      return;\r\n    }\r\n    if (correctOption < 0 || correctOption >= 4) {\r\n      setMessage(\"Please enter a option between 0 to 3!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n    dispatch(postQuestion(question, correctOption, arr, hint));\r\n  };\r\n  const quizCreated = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">Add Question</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Could not post questions. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"question\">\r\n            <Form.Label>Question</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Question\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option1</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 1\"\r\n              value={option1}\r\n              onChange={(e) => setOption1(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option2\">\r\n            <Form.Label>Option2</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 2\"\r\n              value={option2}\r\n              onChange={(e) => setOption2(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option3\">\r\n            <Form.Label>Option3</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 3\"\r\n              value={option3}\r\n              onChange={(e) => setOption3(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\">\r\n            <Form.Label>Option4</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 4\"\r\n              value={option4}\r\n              onChange={(e) => setOption4(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"correctOption\">\r\n            <Form.Label>Correct Option</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Correct Option\"\r\n              value={correctOption}\r\n              onChange={(e) => setCorrectOption(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"hint\">\r\n            <Form.Label>Hint text</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Hint Text\"\r\n              value={hint}\r\n              onChange={(e) => setHint(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mybutton submit-quiz-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={quizCreated}\r\n              className=\"mybutton done-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              I am done\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostQuestions;\r\n",["156","157"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js",["158"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\n\r\nimport EmptyScreen from \"../components/EmptyScreen\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const quizList = useSelector((state) => state.quizList);\r\n  const { loading, error, quiz } = quizList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    dispatch(listQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <h1 className=\"quizzes-title\">Quizzes</h1>\r\n          {loading ? (\r\n            <Loaders></Loaders>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">\r\n              Server Error. Please try again later\r\n            </Message>\r\n          ) : (\r\n            <div className=\"quiz-container\">\r\n              {quiz.map((ele) => (\r\n                <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <EmptyScreen />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js",["159"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js",["160","161","162","163","164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Container } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { add } from \"../actions/My\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { login } from \"../actions/userActions\";\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(password);\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">LOG IN!</h1>\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loader active inline=\"centered\" />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <a href=\"#\" className=\"d-flex justify-content-end mt-2\">\r\n          Forgot Password\r\n        </a>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Don't Have an account\r\n          <a href=\"/register\" className=\"ml-3\">\r\n            Register\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js",["166","167"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyQuizComponent from \"../components/MyQuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myListQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport \"../index.css\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst MyQuiz = () => {\r\n  const dispatch = useDispatch();\r\n  const myQuizList = useSelector((state) => state.myQuizList);\r\n  const { loading, error, myQuiz } = myQuizList;\r\n  useEffect(() => {\r\n    dispatch(myListQuiz());\r\n  }, [dispatch]);\r\n  // useEffect(() => {\r\n  //   Alert(\"State Changed\");\r\n  // }, [myQuiz]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"quizzes-title\">Quizzes</h1>\r\n        {loading ? (\r\n          <Loaders></Loaders>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        ) : (\r\n          <div className=\"quiz-container\">\r\n            {myQuiz.map((ele) => (\r\n              <MyQuizComponent\r\n                quizDetails={ele}\r\n                key={ele._id}\r\n              ></MyQuizComponent>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js",["168"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js",["169","170"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js",["171"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js",["172","173","174","175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"177","replacedBy":"183"},{"ruleId":"179","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":3,"column":26,"nodeType":"187","messageId":"188","endLine":3,"endColumn":31},{"ruleId":"189","severity":1,"message":"190","line":28,"column":6,"nodeType":"191","endLine":28,"endColumn":16,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":31,"column":6,"nodeType":"191","endLine":31,"endColumn":8,"suggestions":"194"},{"ruleId":"177","replacedBy":"195"},{"ruleId":"179","replacedBy":"196"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":6,"nodeType":"191","endLine":11,"endColumn":16,"suggestions":"197"},{"ruleId":"177","replacedBy":"198"},{"ruleId":"179","replacedBy":"199"},{"ruleId":"189","severity":1,"message":"200","line":26,"column":6,"nodeType":"191","endLine":26,"endColumn":16,"suggestions":"201"},{"ruleId":"189","severity":1,"message":"190","line":23,"column":6,"nodeType":"191","endLine":23,"endColumn":16,"suggestions":"202"},{"ruleId":"189","severity":1,"message":"190","line":26,"column":6,"nodeType":"191","endLine":26,"endColumn":16,"suggestions":"203"},{"ruleId":"177","replacedBy":"204"},{"ruleId":"179","replacedBy":"205"},{"ruleId":"185","severity":1,"message":"206","line":14,"column":10,"nodeType":"187","messageId":"188","endLine":14,"endColumn":17},{"ruleId":"185","severity":1,"message":"207","line":14,"column":19,"nodeType":"187","messageId":"188","endLine":14,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":31,"column":6,"nodeType":"191","endLine":31,"endColumn":16,"suggestions":"208"},{"ruleId":"189","severity":1,"message":"209","line":43,"column":6,"nodeType":"191","endLine":43,"endColumn":35,"suggestions":"210"},{"ruleId":"177","replacedBy":"211"},{"ruleId":"179","replacedBy":"212"},{"ruleId":"185","severity":1,"message":"213","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"214","line":30,"column":6,"nodeType":"191","endLine":30,"endColumn":15,"suggestions":"215"},{"ruleId":"185","severity":1,"message":"216","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"217","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"218","line":2,"column":23,"nodeType":"187","messageId":"188","endLine":2,"endColumn":32},{"ruleId":"185","severity":1,"message":"219","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":13},{"ruleId":"185","severity":1,"message":"220","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":67,"column":9,"nodeType":"223","endLine":67,"endColumn":65},{"ruleId":"185","severity":1,"message":"213","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"217","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":15},{"ruleId":"185","severity":1,"message":"224","line":18,"column":3,"nodeType":"187","messageId":"188","endLine":18,"endColumn":19},{"ruleId":"185","severity":1,"message":"225","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":27,"column":20,"nodeType":"228","messageId":"229","endLine":27,"endColumn":22},{"ruleId":"185","severity":1,"message":"230","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":19},{"ruleId":"185","severity":1,"message":"231","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"232","line":4,"column":3,"nodeType":"187","messageId":"188","endLine":4,"endColumn":9},{"ruleId":"185","severity":1,"message":"233","line":6,"column":3,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"234","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":7},{"ruleId":"185","severity":1,"message":"235","line":8,"column":3,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],["236"],["237"],["236"],["237"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["239"],["236"],["237"],["240"],["236"],["237"],"React Hook useEffect has missing dependencies: 'history' and 'userLogin.userInfo'. Either include them or remove the dependency array.",["241"],["242"],["243"],["236"],["237"],"'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["244"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'clearQuestion' aren't valid dependencies because mutating them doesn't re-render the component.",["245"],["236"],["237"],"'Link' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["246"],"'Card' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'add' is defined but never used.","'Loaders' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'QUIZ_DELETE_FAIL' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WelcomePage' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"247","fix":"251"},{"desc":"252","fix":"253"},{"desc":"247","fix":"254"},{"desc":"255","fix":"256"},{"desc":"247","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [history, userInfo]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch, id]",{"range":"264","text":"265"},{"range":"266","text":"263"},"Update the dependencies array to be: [history, userInfo, userLogin.userInfo]",{"range":"267","text":"268"},{"range":"269","text":"263"},"Update the dependencies array to be: [history, quizInfo]",{"range":"270","text":"271"},{"range":"272","text":"263"},"Update the dependencies array to be: [questionInfo, dispatch]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, success]",{"range":"275","text":"276"},[1084,1094],"[history, userInfo]",[1158,1160],"[dispatch, id]",[370,380],[1054,1064],"[history, userInfo, userLogin.userInfo]",[944,954],[1043,1053],"[history, quizInfo]",[1232,1242],[1502,1531],"[questionInfo, dispatch]",[992,1001],"[dispatch, success]"]